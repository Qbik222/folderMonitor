import os
import threading
import time
import json
import re  # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ä–µ–≥—É–ª—è—Ä–Ω–∏–º–∏ –≤–∏—Ä–∞–∑–∞–º–∏
from tkinter import Tk, Label, Entry, Button, StringVar, messagebox
import firebase_admin
from firebase_admin import credentials, db

# –§–∞–π–ª –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
CONFIG_FILE = "config.json"

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Firebase
firebase_app = None
database_ref = None

def load_config():
    """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑ —Ñ–∞–π–ª—É config.json."""
    if os.path.exists(CONFIG_FILE):
        with open(CONFIG_FILE, "r") as file:
            return json.load(file)
    return {}

def save_config(config):
    """–ó–±–µ—Ä—ñ–≥–∞—î –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —É —Ñ–∞–π–ª config.json."""
    with open(CONFIG_FILE, "w") as file:
        json.dump(config, file)

def initialize_firebase(url, key_path):
    global firebase_app, database_ref
    try:
        if firebase_app:
            firebase_admin.delete_app(firebase_app)

        cred = credentials.Certificate(key_path)
        firebase_app = firebase_admin.initialize_app(cred, {'databaseURL': url})
        database_ref = db.reference("/")  # –ö–æ—Ä–µ–Ω–µ–≤–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è RTDB
        messagebox.showinfo("–£—Å–ø—ñ—Ö", "Firebase (Realtime Database) —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
    except Exception as e:
        messagebox.showerror("–ü–æ–º–∏–ª–∫–∞", f"–ù–µ –≤–¥–∞–ª–æ—Å—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ Firebase: {e}")

def monitor_directory(directory_path):
    print(f"üîç –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó: {directory_path}")
    known_folders = {}
    while True:
        time.sleep(5)
        current_folders = set(os.listdir(directory_path))
        new_folders = current_folders - set(known_folders.keys())
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–æ–≤—ñ –ø–∞–ø–∫–∏
        for folder in new_folders:
            if is_valid_folder_name(folder):
                write_to_file(folder)  # –ó–∞–ø–∏—Å—É—î–º–æ –¥–∞–Ω—ñ —É —Ñ–∞–π–ª
                send_to_firebase_from_file()  # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–∞–Ω—ñ –∑ —Ñ–∞–π–ª—É –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö
                known_folders[folder] = set(os.listdir(os.path.join(directory_path, folder)))
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–º—ñ–Ω–∏ —É –≤—ñ–¥–æ–º–∏—Ö –ø–∞–ø–∫–∞—Ö
        for folder, known_files in known_folders.items():
            folder_path = os.path.join(directory_path, folder)
            current_files = set(os.listdir(folder_path))
            new_files = current_files - known_files
            if new_files:
                print(f"üÜï –£ –ø–∞–ø—Ü—ñ '{folder}' –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–æ–≤—ñ —Ñ–∞–π–ª–∏: {new_files}")
                write_to_file(folder)  # –ó–∞–ø–∏—Å—É—î–º–æ –¥–∞–Ω—ñ —É —Ñ–∞–π–ª
                send_to_firebase_from_file()  # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –¥–∞–Ω—ñ –∑ —Ñ–∞–π–ª—É –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö
                known_folders[folder] = current_files

def is_valid_folder_name(folder_name):
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –Ω–∞–∑–≤–∞ –ø–∞–ø–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ñ–æ—Ä–º–∞—Ç—É '123.456'."""
    pattern = r"^\d{3}\.\d{3}$"
    return re.match(pattern, folder_name) is not None

def write_to_file(folder_name):
    """–ó–∞–ø–∏—Å—É—î –¥–∞–Ω—ñ —É —Ñ–∞–π–ª data.txt."""
    try:
        with open("data.txt", "a") as file:
            file.write(f"{folder_name}\n")
        print(f"‚úÖ –î–∞–Ω—ñ –ø—Ä–æ –ø–∞–ø–∫—É '{folder_name}' –∑–∞–ø–∏—Å–∞–Ω—ñ —É —Ñ–∞–π–ª data.txt.")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å—ñ —É —Ñ–∞–π–ª: {e}")

def send_to_firebase_from_file():
    """–ß–∏—Ç–∞—î –¥–∞–Ω—ñ –∑ —Ñ–∞–π–ª—É data.txt —ñ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î —ó—Ö —É Firebase."""
    global database_ref
    if database_ref:
        try:
            with open("data.txt", "r") as file:
                lines = file.readlines()
            
            # –û—á–∏—â–∞—î–º–æ —Ñ–∞–π–ª –ø—ñ—Å–ª—è –∑—á–∏—Ç—É–≤–∞–Ω–Ω—è
            open("data.txt", "w").close()

            for line in lines:
                folder_name = line.strip()
                # –î–æ–¥–∞—î–º–æ –∫–æ–∂–Ω—É –Ω–∞–∑–≤—É –ø–∞–ø–∫–∏ —è–∫ –æ–∫—Ä–µ–º–∏–π –∑–∞–ø–∏—Å —É Firebase
                new_entry_ref = database_ref.child("text_entries").push()  # push() —Å—Ç–≤–æ—Ä—é—î —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –∫–ª—é—á
                new_entry_ref.set({
                    'value': folder_name,  # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–∞–∑–≤—É –ø–∞–ø–∫–∏ —è–∫ —Ç–µ–∫—Å—Ç–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
                    'timestamp': time.time()  # –î–æ–¥–∞—î–º–æ —á–∞—Å–æ–≤—É –º—ñ—Ç–∫—É –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è
                })
                print(f"‚úÖ –ù–∞–∑–≤–∞ –ø–∞–ø–∫–∏ '{folder_name}' —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Realtime Database.")
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á—ñ –≤ Firebase: {e}")
    else:
        print("‚ö†Ô∏è Firebase –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ.")

# –ì—Ä–∞—Ñ—ñ—á–Ω–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
class App:
    def __init__(self, root):
        self.root = root
        self.root.title("Firebase Folder Monitor")

        # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑ —Ñ–∞–π–ª—É
        self.config = load_config()

        self.firebase_url = StringVar(value=self.config.get("firebase_url", ""))
        self.firebase_key_path = StringVar(value=self.config.get("firebase_key_path", ""))
        self.directory_path = StringVar(value=self.config.get("directory_path", ""))

        Label(root, text="–ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ Firebase:").grid(row=0, column=0, sticky="w")
        Entry(root, textvariable=self.firebase_url, width=50).grid(row=0, column=1)
        Button(root, text="–ó–±–µ—Ä–µ–≥—Ç–∏ URL", command=self.save_url).grid(row=0, column=2)

        Label(root, text="–®–ª—è—Ö –¥–æ –∫–ª—é—á–∞ Firebase:").grid(row=1, column=0, sticky="w")
        Entry(root, textvariable=self.firebase_key_path, width=50).grid(row=1, column=1)
        Button(root, text="–ó–±–µ—Ä–µ–≥—Ç–∏ –∫–ª—é—á", command=self.save_key).grid(row=1, column=2)

        Label(root, text="–ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó:").grid(row=2, column=0, sticky="w")
        Entry(root, textvariable=self.directory_path, width=50).grid(row=2, column=1)
        Button(root, text="–ü–æ—á–∞—Ç–∏ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥", command=self.start_monitoring).grid(row=2, column=2)

    def save_url(self):
        url = self.firebase_url.get()
        if url:
            self.config["firebase_url"] = url
            save_config(self.config)
            messagebox.showinfo("–£—Å–ø—ñ—Ö", f"URL Firebase –∑–±–µ—Ä–µ–∂–µ–Ω–æ: {url}")
        else:
            messagebox.showwarning("–ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è", "–í–≤–µ–¥—ñ—Ç—å URL Firebase.")

    def save_key(self):
        key_path = self.firebase_key_path.get()
        if os.path.isfile(key_path):
            self.config["firebase_key_path"] = key_path
            save_config(self.config)
            messagebox.showinfo("–£—Å–ø—ñ—Ö", f"–ö–ª—é—á Firebase –∑–±–µ—Ä–µ–∂–µ–Ω–æ: {key_path}")
        else:
            messagebox.showwarning("–ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è", "–§–∞–π–ª –∫–ª—é—á–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")

    def start_monitoring(self):
        print("üîÑ –°–ø—Ä–æ–±–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥...")
        directory = self.directory_path.get()
        url = self.firebase_url.get()
        key_path = self.firebase_key_path.get()

        if not directory or not os.path.isdir(directory):
            print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è –Ω–µ –≤–∞–ª—ñ–¥–Ω–∞!")
            return

        try:
            self.config["directory_path"] = directory
            save_config(self.config)
            initialize_firebase(url, key_path)
            thread = threading.Thread(target=monitor_directory, args=(directory,), daemon=True)
            thread.start()
            print("‚úÖ –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω–æ!")
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

if __name__ == "__main__":
    root = Tk()
    app = App(root)
    root.mainloop()